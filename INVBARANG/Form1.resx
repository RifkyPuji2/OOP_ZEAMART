<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>